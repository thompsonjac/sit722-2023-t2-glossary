var express = require('express');
var router = express.Router();

const itemList = [
  {'id':1,'title':'DevOps',
  'description':'DevOps is a group of concepts that stress communication, collaboration, integration, and automation in order to improve the flow of work between software developers and IT operations professionals. This increased flow is expected to lead to faster delivery of software and more stable operating environments, which helps to achieve business goals.',
  'reference':'E. Mueller, "What Is DevOps?," The Agile Admin, 23 April 2023. [Online]. Available: https://theagileadmin.com/what-is-devops/. [Accessed 20 July 2023].'},
  {'id':2,'title':'Waterfall Method',
  'description':'The Waterfall Method is a traditional software development approach that follows a linear and sequential process. A project is broken down into distinct phases completed one after the other which can provide limited flexibility for changes or iterations during the development lifecycle.',
  'reference':'R. Sherman, Business Intelligence Guidebook, Amsterdam: Elsevier, 2015.'},
  {'id':3,'title':'Agile methods',
  'description':'Agile methodology is an iterative and incremental approach to software development that emphasises adaptive planning, continuous customer collaboration, and delivering working software in short, frequent iterations.',
  'reference':'K. Beck, M. Beedle, A. van Bennekum, A. Cockburn, W. Cunningham and M. Fowler, "Manifesto for Agile Software Development," 2001. [Online]. Available: https://agilemanifesto.org/. [Accessed 20 July 2023].'},
  {'id':4,'title':'Git Hub',
  'description':'GitHub is a web-based platform and collaborative version control system that facilitates code hosting, sharing, and collaboration among software developers, allowing them to manage and track changes to their code repositories.',
  'reference':'O. Sofela, "Git vs GitHub – What is Version Control and How Does it Work?," FreeCodeCamp, 19 August 2020. [Online]. Available: https://www.freecodecamp.org/news/git-and-github-overview/. [Accessed 22 July 2023].'},
  {'id':5,'title':'Visual Studio Code',
  'description':'Visual Studio Code is a lightweight, cross-platform source code editor developed by Microsoft, featuring built-in support for various programming languages, extensive extensions, and powerful debugging capabilities.',
  'reference':'F. Khalid, "Visual Studio VS. Visual Studio Code," DevTeam.Space, 2023. [Online]. Available: https://www.devteam.space/blog/visual-studio-vs-visual-studio-code/. [Accessed 20 July 2023].'},
  {'id':6,'title':'NodeJS',
  'description':'Node.js is an open-source, cross-platform JavaScript runtime environment that allows developers to execute server-side JavaScript code, enabling scalable and efficient network applications.',
  'reference':'OpenJS Foundation, "About Node.js," OpenJS Foundation, 2023. [Online]. Available: https://nodejs.org/en/about. [Accessed 20 July 2023].'},
  {'id':7,'title':'Cloud',
  'description':'The cloud refers to a network of remote computing resources (networks, servers, storage, applications and services) hosted on the internet, which allows users to store, manage, and access data and applications over the internet rather than on local physical servers or devices. The model is characteristics include on-demand self service, broad network access, resource pooling, rapid elasticity and measure service.',
  'reference':'P. Mell and T. Grance, "The NIST Definition of Cloud Computing," September 2011. [Online]. Available: https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-145.pdf. [Accessed 20 July 2023].'},
  {'id':8,'title':'Data Centre',
  'description':'A data centre is facility that centralises operations and equipment used to store, manage, and process large amounts of data and information for various purposes. They may be enterprise (on premises), managed (by a third party), collocated (owner by a third party but managed by the user) or cloud (distributed across multiple managed sites).',
  'reference':'Palo Alto Networks, "What is a Data Center?," 2023. [Online]. Available: https://www.paloaltonetworks.com/cyberpedia/what-is-a-data-center. [Accessed 20 July 2023].'},
  {'id':9,'title':'Bootstrapping',
  'description':'Bootstrapping refers to the process of setting up and configuring the initial infrastructure and tools required for automated software development, deployment, and operations, often utilising scripts, automation tools, or configuration management systems.',
  'reference':'Amazon Web Services, "Bootstrapping," 2023. [Online]. Available: https://docs.aws.amazon.com/cdk/v2/guide/bootstrapping.html. [Accessed 20 July 2023].'},
  {'id':10,'title':'Microservices',
  'description':'Microservices refers to a software architecture approach where applications are built as a collection of small, loosely coupled, and independently deployable services, enabling greater agility, scalability, and ease of continuous delivery.',
  'reference':'J. Nemer, "Advantages and Disadvantages of Microservices Architecture," Cloud Academy, 17 July 2023. [Online]. Available: https://cloudacademy.com/blog/microservices-architecture-challenge-advantage-drawback/. [Accessed 20 July 2023].'},
  {'id':11,'title':'Enterprise',
  'description':'The term Enterprise refers to large-scale organisations or businesses with complex and diverse IT infrastructures, software systems, and applications. These organisations typically have multiple teams, departments, and projects, and they deal with a high volume of users, transactions, and data. ',
  'reference':'D. Siroky, “What is Enterprise DevOps?,” Plutora, 2022. [Online]. Available: https://www.plutora.com/blog/what-is-enterprise-devops#:~:text=In%20an%20Enterprise%20DevOps%20approach%2C%20your%20operations%20teams%20supply%20a,to%20automate%20deployment%20to%20production.. [Accessed 3 August 2023].'},
  {'id':12,'title':'Automation',
  'description':'Automation is a fundamental principle that follows the idea of "everything is code" and seeks to "automate everything." It involves using a wide range of tools, scripts, and technologies to replace manual, repetitive tasks in the software development and delivery process. The aim of automation is to streamline and optimise the software development lifecycle, leading to faster releases, enhanced efficiency, and reduced human errors.',
  'reference':'Atlassian, “DevOps Automation Tutorials,” 2023. [Online]. Available: https://www.atlassian.com/devops/automation-tutorials#:~:text=DevOps%20is%20a%20set%20of,is%20essential%20to%20DevOps%20success. [Accessed 3 August 2023]'},
  {'id':13,'title':'Collaboration',
  'description':'Collaboration is the practice of effective communication and teamwork among cross-functional teams to accelerate software delivery. It involves breaking down barriers between development and operations, fostering a culture of shared responsibility, and utilising a common toolset for seamless collaboration and automation. By prioritising collaboration organisations can rapidly achieve reliable software releases and enhance overall efficiency in the development lifecycle.',
  'reference':'J. Mulder, Enterprise DevOps for Architects : Leveraging AIOps and DevSecOps for secure digital transformation, Packt Publishing, 2021. '},
  {'id':14,'title':'Integration',
  'description':'Integration is at the core of the practice of bringing together development, operations, and business demands. It involves merging code changes with new functionality driven by user requests and aligning IT delivery with changing business demands. Continuous Integration ensures that development keeps pace with rapid changes, prompting operations to adopt these advancements at a similar speed.',
  'reference':'J. Mulder, Enterprise DevOps for Architects : Leveraging AIOps and DevSecOps for secure digital transformation, Packt Publishing, 2021. '},
  {'id':15,'title':'Portfolio and Configuration Management',
  'description':'In DevOps, successful automation and integration depend on a well-defined portfolio of building blocks representing packages of functionality that can be easily automated. These building blocks are part of the Architecture Development Method (ADM) cycle. They should be clearly defined, documented, and managed through configuration management to ensure reusability and replaceability. Well-defined interfaces enable seamless automation of these building blocks, facilitating efficient software development and deployment.',
  'reference':'J. Mulder, Enterprise DevOps for Architects : Leveraging AIOps and DevSecOps for secure digital transformation, Packt Publishing, 2021. '},
  {'id':16,'title':'Behaviour Driven Design',
  'description':'Behaviour-Driven Design is an approach that emphasises collaboration among developers, testers, and business stakeholders to define and understand the desired behaviour of software applications. It involves expressing software requirements using natural language and structured formats like Given-When-Then statements to create executable specifications that guide development and testing. It encourages a shared understanding of software behaviour, enabling teams to deliver high-quality software that aligns closely with business needs and expectations.',
  'reference':'M. Krief, Learning DevOps - Second Edition, Packt Publishing, 2022.'},
  {'id':17,'title':'Test-Driven Design',
  'description':'Test-Driven Design is a software development practice that involves writing automated tests before writing the actual code. The process starts with creating a test that defines the expected behaviour of a particular feature or functionality. Developers then write code to fulfill the test requirements, iterating and refining the code until the code passes the define test. This ensures a reliable and predictable development process and promotes code quality.',
  'reference':'M. Krief, Learning DevOps - Second Edition, Packt Publishing, 2022.'},
  {'id':18,'title':'Continuous Integration',
  'description':'Continuous Integration is a software development practice where code changes committed to the source-code repository are automatically and continuously tested against a preset series of tests. These tests may include automated builds, unit, and functional tests. The tests are performed on a separate server and the results are provided to the DevOps teams for fixes and improvements. By reducing the time frame between code commits and CI testing, issues are identified and resolved more quickly.',
  'reference':'M. Krief, Learning DevOps - Second Edition, Packt Publishing, 2022.'},
  {'id':19,'title':'Continuous Delivery',
  'description':'Continuous Delivery involves automatically deploying successfully tested code from the Continuous Integration stage to a staging environment for automated acceptance and performance testing. Human intervention is still required for sign-off on the testing outcomes before releasing the code to the production system. This enables faster and more reliable software delivery, ensuring new features and updates reach end-users efficiently while maintaining high-quality standards.',
  'reference':'M. Krief, Learning DevOps - Second Edition, Packt Publishing, 2022.'},
  {'id':20,'title':'Continuous Deployment',
  'description':'Continuous Deployment an advanced software development practice where code changes that pass the automated tests in the Continuous Delivery stage are automatically deployed to the production environment. By eliminating this manual step automated deployment enables rapid and continuous software releases and reduces the time between code changes and their availability to end-users. This streamlined approach ensures that every successful code change seamlessly and efficiently reaches production, optimising the software delivery cycle.',
  'reference':'M. Krief, Learning DevOps - Second Edition, Packt Publishing, 2022.'},
  {'id':21,'title':'Infrastructure as Code',
  'description':'Infrastructure as Code (IaC) is a practice where infrastructure configuration is managed and provisioned through code and automation tools, enabling consistent and repeatable setup of servers, networks, and other IT resources.',
  'reference':'Red Hat, Inc, “What is Infrastructure as Code (IaC)?,” May 11 2022. [Online]. Available: https://www.redhat.com/en/topics/automation/what-is-infrastructure-as-code-iac#:~:text=Infrastructure%20as%20Code%20(IaC)%20is,to%20edit%20and%20distribute%20configurations.. [Accessed 2023 August 25].'},
  {'id':22,'title':'Containers',
  'description':'Containers are lightweight, isolated environments that package applications and their dependencies together, ensuring consistent behaviour across different computing environments and enabling efficient deployment and scaling.',
  'reference':'Docker Inc., “Use containers to Build, Share and Run your applications,” 2023. [Online]. Available: https://www.docker.com/resources/what-container/. [Accessed 25 August 2023].'},
  {'id':23,'title':'Virtual Machine',
  'description':'A virtual machine (VM) is a software-based emulation of a physical computer, allowing multiple operating systems to run on a single physical machine, each isolated and independent from the others. This enables the simultaneous operation of multiple operating systems on a single physical host, allowing for isolated and resource-controlled computing environments. ',
  'reference':'VMWare, Inc., “What is a Virtual Machine?,” 2023. [Online]. Available: https://www.vmware.com/au/topics/glossary/content/virtual-machine.html. [Accessed 25 August 2023].'},
  {'id':24,'title':'Docker',
  'description':'Docker simplifies application deployment using containers. It packages an application and its dependencies into a portable, reproducible unit. Docker containers ensure consistent behaviour from development to production, streamlining development workflows and enhancing scalability.',
  'reference':'Docker Inc, “Docker overview,” 2023. [Online]. Available: https://docs.docker.com/get-started/overview/. [Accessed 25 August 2023].'},
  {'id':25,'title':'Kubernetes',
  'description':'Kubernetes is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications, ensuring high availability, fault tolerance, and easy scaling.',
  'reference':'The Kubernetes Authors, “Kubernates Overview,” 12 July 2023. [Online]. Available: https://kubernetes.io/docs/concepts/overview/. [Accessed 25 August 2023].'},
  {'id':26,'title':'Azure Storage',
  'description':'Azure Storage is a cloud-based storage service provided by Microsoft Azure, offering scalable and highly available storage solutions for various data types, including blobs, files, queues, tables, and disks.',
  'reference':'Microsoft, “Introduction to Azure Storage,” 3 August 2023. [Online]. Available: https://learn.microsoft.com/en-us/azure/storage/common/storage-introduction. [Accessed 25 August 2023].'},
  {'id':27,'title':'Cloud-native Applications',
  'description':'Cloud-native applications are designed and built to fully leverage the advantages of cloud computing, utilizing microservices architecture, scalability, and elasticity, and often being containerized for easy deployment.',
  'reference':'Red Hat, Inc., “Understanding cloud-native applications,” 10 May 2022. [Online]. Available: https://www.redhat.com/en/topics/cloud-native-apps#:~:text=Cloud%2Dnative%20applications%20are%20a,user%20feedback%20for%20continuous%20improvement.. [Accessed 25 August 2023].'},
  {'id':28,'title':'Docker Compose',
  'description':'Docker Compose is a tool that allows you to define and manage multi-container applications using a single YAML file, making it easier to set up and coordinate the interactions between different containers.',
  'reference':'Docker Inc., “Use Docker Compose,” 2023. [Online]. Available: https://docs.docker.com/get-started/08_using_compose/. [Accessed 25 August 2023].'},
  {'id':29,'title':'YAML',
  'description':'YAML (YAML Aint Markup Language) is a human-readable data serialization format often used for configuration files and data exchange between languages with different data structures, using indentation to define hierarchical relationships.',
  'reference':'Red Hat, Inc., “What is YAML?,” 6 March 2023. [Online]. Available: https://www.redhat.com/en/topics/automation/what-is-yaml. [Accessed 25 August 2023].'},
  {'id':30,'title':'JSON',
  'description':'JSON (JavaScript Object Notation) is a lightweight data interchange format commonly used for transmitting data between a server and a web application, organized as key-value pairs and nested objects, and easily readable by both humans and machines.',
  'reference':'M. Tyson, “What is JSON? The universal data format,” 26 August 2022. [Online]. Available: https://www.infoworld.com/article/3222851/what-is-json-a-better-format-for-data-exchange.html. [Accessed 25 August 2023].'},
  {'id':31,'title':'Volumes',
  'description':'Volumes represent a data management strategy for containers and help persist data beyond the lifecycle of a container. Volumes facilitate data sharing between containers and provide a means to store critical application data, databases, or configuration files. ',
  'reference':'Docker Inc., “Volumes,” 2023. [Online]. Available: https://docs.docker.com/storage/volumes/. [Accessed 9 September 2023].'},
  {'id':32,'title':'Networking',
  'description':'Networking encompasses the configuration, management, and optimisation of communication pathways between various software components, services, and infrastructure elements. This includes defining network architectures, specifying firewall rules, load balancing, and ensuring secure and efficient data flow. Effective networking practices are essential for building robust, highly available, and performant systems.',
  'reference':'Docker Inc., “Networking overview,” 2023. [Online]. Available: https://docs.docker.com/network/. [Accessed 6 September 2023].'},
  {'id':33,'title':'Bridge Network',
  'description':'These networks are localised, private network created to facilitate communication between containers residing on the same host. They isolate containers from external networks, enhancing security by creating a controlled communication environment. Bridge networks are crucial for microservice architectures and enable discrete container interactions while preventing unauthorised external access.',
  'reference':'Docker Inc., “Bridge network driver,” 2023. [Online]. Available: https://docs.docker.com/network/drivers/bridge/. [Accessed 6 September 2023].'},
  {'id':34,'title':'Overlay Network',
  'description':'Overlay networks are designed to support communication between containers running on different hosts or nodes in a cluster. Overlay networks are fundamental to container orchestration platforms like Kubernetes and Docker Swarm, allowing containers to communicate seamlessly across nodes while abstracting the underlying network complexity. ',
  'reference':'Docker Inc., “Overlay Network Driver,” 2023. [Online]. Available: https://docs.docker.com/network/drivers/overlay/. [Accessed 6 September 2023].'},
  {'id':35,'title':'Macvlan Network',
  'description':'Macvlan networks assign a unique MAC address to each container, enabling them to function as individual entities on the network. This approach is useful when containers require direct access to specific network resources or when they need to appear as separate devices on the network. Macvlan networks provide a high level of network isolation and are commonly used in advanced DevOps scenarios.',
  'reference':'Docker Inc., “Macvlan Network Driver,” 2023. [Online]. Available: https://docs.docker.com/network/drivers/macvlan/. [Accessed 6 September 2023].'},
  {'id':36,'title':'Direct Messaging',
  'description':'Direct messaging involves one-to-one communication between software components. It serves as a means for quick and specific exchanges of information, notifications, or instructions. ',
  'reference':'Microsoft, “Communication in a microservice architecture,” 13 April 2022. [Online]. Available: https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture. [Accessed 6 September 2023].'},
  {'id':37,'title':'Indirect Messaging',
  'description':'Indirect messaging refers to one-to-many communication mechanisms, typically facilitated by messaging systems or notification platforms. These systems distribute information, alerts, or updates to multiple recipients or systems simultaneously. ',
  'reference':'Microsoft, “Communication in a microservice architecture,” 13 April 2022. [Online]. Available: https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture. [Accessed 6 September 2023].'},
  {'id':38,'title':'Kubernates Pod',
  'description':'A Kubernetes Pod represents the smallest deployable unit within a Kubernetes cluster. It can consist of one or more containers that share the same network namespace, storage, and lifecycle. Pods serve as the foundational building blocks for deploying and managing containerised applications in Kubernetes, ensuring tight coupling when necessary and facilitating resource sharing.',
  'reference':'The Kubernates Authors, “Pods,” 24 August 2023. [Online]. Available: https://kubernetes.io/docs/concepts/workloads/pods/. [Accessed 6 September 2023].'},
  {'id':39,'title':'Kubernates Control Plane',
  'description':'The Kubernetes Control Plane represent the core components responsible for managing the orchestration and coordination of containers within a Kubernetes cluster. It includes components such as the API server, etcd for distributed configuration data storage, and the controller manager. The Control Plane ensures that the desired state of applications and infrastructure is maintained, enabling scaling, resilience, and efficient resource allocation.',
  'reference':'The Kubernetes Authors, “Kubernetes Components,” 12 July 2023. [Online]. Available: https://kubernetes.io/docs/concepts/overview/components/. [Accessed 6 September 2023].'},
  {'id':40,'title':'Terraform',
  'description':'Terraform is an open-source infrastructure as code (IaC) tool. It allows developers to define infrastructure resources and their configurations using declarative code. Terraform then automates the provisioning and management of these resources across various cloud providers or on-premises environments. DevOps practitioners use Terraform to establish consistent, version-controlled, and repeatable infrastructure setups, enhancing the reliability and scalability of applications.',
  'reference':'Hashicorp, Inc., “What is Terraform?,” 24 February 2023. [Online]. Available: https://developer.hashicorp.com/terraform/intro. [Accessed 6 September 2023].'}
]

/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { 
    title: 'SIT722 DevOps Glossary', 
    subheading: 'Welcome to my website showing a collection of DevOps terms and their brief descriptions.', 
    items: itemList, 
    disclaimer: 'All above terms were also researched through OpenAI ChatGPT so should be considered to have a reference of (Please tell me about [TERM], OpenAI ChatGPT, Private Communication, 20 July 2023) as well.'});
});

module.exports = router;
